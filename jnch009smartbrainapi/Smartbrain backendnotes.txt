Write the backend separately from the front end

Test the backend using Postman

be very careful about maintaining type coercion otherwise you may not see 
certain results you expect

Always send sensitive info from frontend to backend using HTTPS in a POST body
Storing this info in the database with something like bcrypt (hashing)

no need to do .json since we're not sending by HTTP
 db.select('*')
   .from('users')
   .then(data => console.log(data));

dependency injection: injecting whatever dependencies the function needs

Server never trusts anything received from the frontend

IMPORTANT: If you want to use cookies in your app, you must set {credentials: include} on any of your fetch calls to protected routes
The server must also have cors({ origin: true, credentials: true })

sameSite: lax only allows same site requests does NOT allow cross origin

BE CAREFUL WHEN USING MOCHA that you do not use beforeEach and afterEach with nested tests otherwise you will get unintended behavior
of your database state changing when you want it to stay (ie. a password update test). beforeEach and afterEach will always run
before/after tests even if they are NESTED!

CRITICAL CHANGE:
I am going to change the jwt content from all the user information to just the id
This is because when a user is updated, the information will be out of sync 

BUG:
email in login needs to be updated too when profile is updated

Error handling:
Tell the user if the email has been taken already