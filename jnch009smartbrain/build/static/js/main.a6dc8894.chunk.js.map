{"version":3,"sources":["Components/FaceRecognition/FaceRecognition.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Logo/Logo.js","Components/Navigation/Navigation.js","Components/Rank/Rank.js","Components/Register/Register.js","Components/SignIn/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["FaceRecognition","imageUrl","boundingBox","className","id","src","alt","width","height","map","box","key","topRow","style","top","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onButtonSubmit","type","onInput","e","onClick","Logo","options","max","paddingTop","Navigation","onRouteChange","isSignedIn","display","justifyContent","Rank","name","score","Register","props","onNameChange","setState","target","value","onEmailChange","email","onPasswordChange","password","onSubmit","fetch","method","headers","body","JSON","stringify","state","then","resp","json","data","localStorage","setItem","sessionExp","loadUser","htmlFor","this","Component","SignIn","signInEmail","signInPassword","onKeyPress","onSubmitSignIn","status","particleOptions","particles","number","density","enable","area","interactivity","events","onHover","mode","initialState","input","route","userProfile","joined","App","compareExpDate","Date","now","parse","getItem","exp","user","event","calculateBox","clarifyArray","outputs","regions","region","region_info","bounding_box","image","document","getElementById","Number","top_row","left_col","bottom_row","right_col","displayBox","boxes","response","console","log","newProfile","curr","catch","err","removeItem","setSessionExpiry","timestamp","setMinutes","getMinutes","prevProps","prevState","snapshot","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a6dc8894.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, boundingBox}) => {\r\n  return (\r\n    <div className='center'>\r\n      <div className='absolute mt2 mb4'>\r\n        <img\r\n          id='inputimage'\r\n          className='center'\r\n          src={imageUrl}\r\n          alt=''\r\n          width='500px'\r\n          height='auto'\r\n        />\r\n        {boundingBox.map((box) => (\r\n          <div\r\n            key={box.topRow}\r\n            className='boundingBox'\r\n            style={{\r\n              top: box.topRow,\r\n              right: box.rightCol,\r\n              bottom: box.bottomRow,\r\n              left: box.leftCol,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\n\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className='f3'>\r\n        {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='form center pa4 br3 shadow-5'>\r\n          <input\r\n            className='f4 pa2 w-70 center'\r\n            type='text'\r\n            onInput={(e) => onInputChange(e)}\r\n          />\r\n          <button\r\n            className='tc w-30 o-90 glow f6 link ph3 pv2 dib white bg-light-purple'\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\n\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0'>\r\n      <Tilt\r\n        className='Tilt br2 shadow-2'\r\n        options={{ max: 55 }}\r\n        style={{ height: 100, width: 100 }}\r\n      >\r\n        <div className='Tilt-inner pa3'>\r\n          {' '}\r\n          <img style={{ paddingTop: '5px' }} src='./learning.png' alt='' />{' '}\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n  return (\r\n    <>\r\n      {isSignedIn === true ? (\r\n        <>\r\n          <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            {' '}\r\n            <p\r\n              className='f3 link dim black underline pa3 pointer'\r\n              onClick={() => onRouteChange('SignIn')}\r\n            >\r\n              Sign Out\r\n            </p>\r\n          </nav>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            {' '}\r\n            <p\r\n              className='f3 link dim black underline pa3 pointer'\r\n              onClick={() => onRouteChange('SignIn')}\r\n            >\r\n              Sign In\r\n            </p>{' '}\r\n            <p\r\n              className='f3 link dim black underline pa3 pointer'\r\n              onClick={() => onRouteChange('Register')}\r\n            >\r\n              Register\r\n            </p>\r\n          </nav>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst Rank = ({ name, score }) => {\r\n  return (\r\n    <div>\r\n      <div className='white f3'>{`${name}, your current rank is....`}</div>\r\n      <div className='white f1'>{`${score}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React, { Component } from 'react';\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  onNameChange = e => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  onEmailChange = e => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  onPasswordChange = e => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    fetch('https://whispering-crag-84898.herokuapp.com/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      }),\r\n    })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        if (data?.id) {\r\n          localStorage.setItem(\r\n            'currentSession',\r\n            JSON.stringify({\r\n              data,\r\n              ...this.props.sessionExp(),\r\n            }),\r\n          );\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className='br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw7 center'>\r\n        <main className='pa4 black-80'>\r\n          <div className='measure'>\r\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\r\n              <legend className='f1 fw6 ph0 mh0'>Register</legend>\r\n              <div className='mt3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='name'>\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='text'\r\n                  name='name'\r\n                  id='name'\r\n                  onInput={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className='mt3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='email-address'>\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='email'\r\n                  name='email-address'\r\n                  id='email-address'\r\n                  onInput={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className='mv3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='password'>\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  onInput={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=''>\r\n              <input\r\n                className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\r\n                type='submit'\r\n                onClick={this.onSubmit}\r\n                value='Register'\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: '',\r\n    };\r\n  }\r\n\r\n  onEmailChange = e => {\r\n    this.setState({ signInEmail: e.target.value });\r\n  };\r\n\r\n  onPasswordChange = e => {\r\n    this.setState({ signInPassword: e.target.value });\r\n  };\r\n\r\n  onKeyPress = e => {\r\n    if (e.key === 'Enter') {\r\n      this.onSubmitSignIn();\r\n    }\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    // POST Request\r\n    fetch('https://whispering-crag-84898.herokuapp.com/signin', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      }),\r\n    })\r\n      .then(resp => {\r\n        if (resp.status === 200) {\r\n          return resp.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data?.id) {\r\n          localStorage.setItem(\r\n            'currentSession',\r\n            JSON.stringify({\r\n              data,\r\n              ...this.props.sessionExp(),\r\n            }),\r\n          );\r\n          this.props.loadUser(data);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className='br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw7 center'>\r\n        <main className='pa4 black-80'>\r\n          <div className='measure'>\r\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\r\n              <legend className='f1 fw6 ph0 mh0'>Sign In</legend>\r\n              <div className='mt3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='email-address'>\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='email'\r\n                  name='email-address'\r\n                  id='email-address'\r\n                  onInput={this.onEmailChange}\r\n                  onKeyPress={this.onKeyPress}\r\n                />\r\n              </div>\r\n              <div className='mv3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='password'>\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  onInput={this.onPasswordChange}\r\n                  onKeyPress={this.onKeyPress}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=''>\r\n              <input\r\n                className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\r\n                type='submit'\r\n                onClick={this.onSubmitSignIn}\r\n                value='Sign in'\r\n              />\r\n            </div>\r\n            <div className='lh-copy mt3'>\r\n              <p\r\n                onClick={() => onRouteChange('Register')}\r\n                className='f6 link dim black db pointer'\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\r\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\r\nimport Logo from './Components/Logo/Logo';\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport Rank from './Components/Rank/Rank';\r\nimport Register from './Components/Register/Register';\r\nimport SignIn from './Components/SignIn/SignIn';\r\n\r\nimport './App.css';\r\n\r\n//20 minutes\r\nconst expiry = 20;\r\n\r\nconst particleOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 100,\r\n      density: {\r\n        enable: true,\r\n        area: 800,\r\n      },\r\n    },\r\n  },\r\n  interactivity: {\r\n    events: {\r\n      onHover: {\r\n        enable: true,\r\n        mode: 'repulse',\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst currentSession = 'currentSession';\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: [],\r\n  route: 'SignIn',\r\n  isSignedIn: false,\r\n  userProfile: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    score: 0,\r\n    joined: '',\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.compareExpDate()) {\r\n      this.setState({\r\n        isSignedIn: true,\r\n        route: 'home',\r\n        userProfile: JSON.parse(localStorage.getItem(currentSession))?.data,\r\n      });\r\n    } else {\r\n      localStorage.removeItem(currentSession);\r\n      this.setState({\r\n        isSignedIn: false,\r\n        route: 'SignIn',\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevState.input !== this.state.input) {\r\n      if (this.compareExpDate()) {\r\n        this.setState({\r\n          isSignedIn: true,\r\n          route: 'home',\r\n          userProfile: JSON.parse(localStorage.getItem(currentSession))?.data,\r\n        });\r\n      } else {\r\n        localStorage.removeItem(currentSession);\r\n        this.setState({\r\n          isSignedIn: false,\r\n          route: 'SignIn',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  compareExpDate = () => {\r\n    return (\r\n      Date.now() <\r\n      Date.parse(JSON.parse(localStorage.getItem(currentSession))?.exp)\r\n    );\r\n  };\r\n\r\n  loadUser = user => {\r\n    this.setState({\r\n      userProfile: {\r\n        id: user.id,\r\n        name: user.name,\r\n        email: user.email,\r\n        score: user.score,\r\n        joined: user.joined,\r\n      },\r\n    });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      input: event.target.value,\r\n    });\r\n  };\r\n\r\n  calculateBox = data => {\r\n    const clarifyArray = data.outputs[0].data.regions.map(\r\n      region => region.region_info.bounding_box,\r\n    );\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n\r\n    let boundingBoxes = clarifyArray.map(box => {\r\n      return {\r\n        topRow: box.top_row * height,\r\n        leftCol: box.left_col * width,\r\n        bottomRow: height - box.bottom_row * height,\r\n        rightCol: width - box.right_col * width,\r\n      };\r\n    });\r\n    return boundingBoxes;\r\n  };\r\n\r\n  displayBox = boxes => {\r\n    this.setState({\r\n      box: [...this.state.box, ...boxes],\r\n    });\r\n  };\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState(\r\n      {\r\n        imageUrl: this.state.input,\r\n        box: [],\r\n      },\r\n      () => {\r\n        fetch('https://whispering-crag-84898.herokuapp.com/imageURL', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            input: this.state.input,\r\n          }),\r\n        })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            console.log(response);\r\n            if (response) {\r\n              fetch('https://whispering-crag-84898.herokuapp.com/image', {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                  id: this.state.userProfile.id,\r\n                }),\r\n              })\r\n                .then(resp => resp.json())\r\n                .then(newProfile => {\r\n                  this.setState(\r\n                    {\r\n                      userProfile: newProfile,\r\n                    },\r\n                    () => {\r\n                      let curr = JSON.parse(\r\n                        localStorage.getItem(currentSession),\r\n                      );\r\n                      curr.data = this.state.userProfile;\r\n                      localStorage.setItem(\r\n                        currentSession,\r\n                        JSON.stringify(curr),\r\n                      );\r\n                    },\r\n                  );\r\n                });\r\n            }\r\n            this.displayBox(this.calculateBox(response));\r\n          })\r\n          .catch(err => console.log(err));\r\n      },\r\n    );\r\n  };\r\n\r\n  onRouteChange = route => {\r\n    if (route === 'home') {\r\n      this.setState({\r\n        isSignedIn: true,\r\n        route: route,\r\n      });\r\n    } else {\r\n      localStorage.removeItem(currentSession);\r\n      this.setState({ ...initialState, route: route });\r\n    }\r\n  };\r\n\r\n  setSessionExpiry = () => {\r\n    let timestamp = new Date();\r\n    timestamp.setMinutes(timestamp.getMinutes() + expiry);\r\n    return { curr: new Date(), exp: timestamp };\r\n  };\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box, userProfile } = this.state;\r\n\r\n    return (\r\n      <div className='App'>\r\n        <Particles className='particles' params={particleOptions} />\r\n        <Navigation\r\n          onRouteChange={this.onRouteChange}\r\n          isSignedIn={isSignedIn}\r\n        />\r\n\r\n        {route === 'home' ? (\r\n          <>\r\n            <Logo />\r\n            <Rank name={userProfile.name} score={userProfile.score} />\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onButtonSubmit={this.onButtonSubmit}\r\n            />\r\n            <FaceRecognition imageUrl={imageUrl} boundingBox={box} />\r\n          </>\r\n        ) : route === 'SignIn' ? (\r\n          <SignIn\r\n            onRouteChange={this.onRouteChange}\r\n            loadUser={this.loadUser}\r\n            sessionExp={this.setSessionExpiry}\r\n          />\r\n        ) : (\r\n          <Register\r\n            onRouteChange={this.onRouteChange}\r\n            loadUser={this.loadUser}\r\n            sessionExp={this.setSessionExpiry}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}