{"version":3,"sources":["Components/FaceRecognition/FaceRecognition.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Logo/Logo.js","Components/Navigation/Navigation.js","Components/Rank/Rank.js","Components/Register/Register.js","Components/SignIn/SignIn.js","Components/Error/Error.js","Components/GridRow/GridRow.js","Components/Profile/ProfileEdit.js","Components/Profile/ProfilePassword.js","Components/Profile/ProfileDelete.js","Components/Profile/Profile.js","Components/LoadingSpinner/LoadingSpinner.js","App.js","serviceWorker.js","index.js"],"names":["FaceRecognition","imageUrl","boundingBox","className","id","src","alt","width","height","map","box","key","topRow","style","top","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onButtonSubmit","inputField","type","value","onInput","e","onClick","Logo","options","max","paddingTop","Navigation","routingLogic","isSignedIn","display","justifyContent","Rank","name","score","Register","props","onNameChange","setState","target","onEmailChange","email","onPasswordChange","password","validateEmail","test","state","validatePassword","validateForm","setError","onSubmit","trackPromise","fetch","process","method","headers","body","JSON","stringify","credentials","then","resp","json","data","loadUser","keyEnter","this","htmlFor","pattern","required","onKeyPress","Component","SignIn","signInEmail","signInPassword","onSubmitSignIn","Error","children","GridRow","title","editable","handleChange","href","onChange","ProfileEdit","profile","joined","useState","setName","setEmail","handleEditConfirmation","res","catch","err","console","log","editProfileEnterPress","tabIndex","class","ProfilePassword","currPassword","setCurrPassword","newPassword","setNewPassword","handlePasswordUpdate","currentPassword","passwordUpdateEnterPress","ProfileDelete","clearUser","dateOptions","year","day","month","hour","minute","second","Profile","route","joinedDate","Intl","DateTimeFormat","format","Date","profileView","editProps","passUpdateProps","deleteProps","profileRouting","LoadingSpinner","promiseInProgress","usePromiseTracker","particleOptions","particles","number","density","enable","area","interactivity","events","onHover","mode","initialState","input","userProfile","errorMsg","history","createBrowserHistory","App","urlPath","user","action","push","result","event","calculateBox","clarifyArray","outputs","regions","region","region_info","bounding_box","image","document","getElementById","Number","top_row","left_col","bottom_row","right_col","displayBox","boxes","response","newProfile","msg","setTimeout","onKeyEnter","submit","switchRoute","listen","location","pathname","params","CSSTransition","in","timeout","classNames","unmountOnExit","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b1a52c5e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, boundingBox}) => {\n  return (\n    <div className='flexCenter'>\n      <div className='absolute mt2 mb4'>\n        <img\n          id='inputimage'\n          className='flexCenter'\n          src={imageUrl}\n          alt=''\n          width='500px'\n          height='auto'\n        />\n        {boundingBox.map(box => (\n          <div\n            key={box.topRow}\n            className='boundingBox'\n            style={{\n              top: box.topRow,\n              right: box.rightCol,\n              bottom: box.bottomRow,\n              left: box.leftCol,\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from 'react';\n\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit, inputField }) => {\n  return (\n    <div>\n      <p className='f3'>\n        {'This Magic Brain will detect faces in your pictures. Give it a try!'}\n      </p>\n      <div className='center'>\n        <div className='form center pa4 br3 shadow-5'>\n          <input\n            className='f4 pa2 w-70 center'\n            type='text'\n            value={inputField}\n            onInput={e => onInputChange(e)}\n          />\n          <button\n            className='tc w-30 o-90 glow f6 link ph3 pv2 dib white bg-light-purple'\n            onClick={onButtonSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from 'react';\nimport Tilt from 'react-tilt';\n\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='ma4 mt0'>\n      <Tilt\n        className='Tilt br2 shadow-2'\n        options={{ max: 55 }}\n        style={{ height: 100, width: 100 }}\n      >\n        <div className='Tilt-inner pa3'>\n          {' '}\n          <img style={{ paddingTop: '5px' }} src='./learning.png' alt='' />{' '}\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\n\nconst Navigation = ({ routingLogic, isSignedIn }) => {\n  return (\n    <>\n      {isSignedIn === true ? (\n        <>\n          <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            {' '}\n            <p\n              className='f3 link dim black underline pa3 pointer'\n              onClick={() => routingLogic('/')}\n            >\n              Home\n            </p>\n            <p\n              className='f3 link dim black underline pa3 pointer'\n              onClick={() => routingLogic('/Profile')}\n            >\n              Profile\n            </p>\n            <p\n              className='f3 link dim black underline pa3 pointer'\n              onClick={() => routingLogic('/SignOut')}\n            >\n              Sign Out\n            </p>\n          </nav>\n        </>\n      ) : (\n        <>\n          <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            {' '}\n            <p\n              className='f3 link dim black underline pa3 pointer'\n              onClick={() => routingLogic('/SignIn')}\n            >\n              Sign In\n            </p>{' '}\n            <p\n              className='f3 link dim black underline pa3 pointer'\n              onClick={() => routingLogic('/Register')}\n            >\n              Register\n            </p>\n          </nav>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst Rank = ({ name, score }) => {\n  return (\n    <div>\n      <div className='white f3'>{`${name}, your current rank is....`}</div>\n      <div className='white f1'>{`${score}`}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React, { Component } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n    };\n  }\n\n  onNameChange = e => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  onEmailChange = e => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  onPasswordChange = e => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  validateEmail = () => {\n    let reEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    return reEmail.test(this.state.email);\n  };\n\n  validatePassword = () => {\n    let rePassword = /.{8,}/;\n    return rePassword.test(this.state.password);\n  };\n\n  validateForm = () => {\n    if (!this.validateEmail() || !this.validatePassword()) {\n      if (!this.validateEmail()) {\n        this.props.setError('Email format is not correct');\n      } else if (!this.validatePassword()) {\n        this.props.setError('Password must be at least 8 characters');\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  onSubmit = () => {\n    if (this.validateForm()) {\n      trackPromise(\n        fetch(\n          `${\n            process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\n          }/register`,\n          {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              name: this.state.name,\n              email: this.state.email,\n              password: this.state.password,\n            }),\n            credentials: 'include',\n          }\n        )\n          .then(resp => resp.json())\n          .then(data => {\n            if (data?.id) {\n              this.props.loadUser(data);\n              this.props.routingLogic('/');\n            } else {\n              this.props.setError(data);\n            }\n          })\n      );\n    }\n  };\n\n  render() {\n    const { keyEnter } = this.props;\n\n    return (\n      <article className='br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw7 center'>\n        <main className='pa4 black-80'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <legend className='f1 fw6 ph0 mh0'>Register</legend>\n              <div className='mt3'>\n                <label className='db fw6 lh-copy f6' htmlFor='name'>\n                  Name\n                </label>\n                <input\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='text'\n                  name='name'\n                  id='name'\n                  onInput={this.onNameChange}\n                />\n              </div>\n              <div className='mt3'>\n                <label className='db fw6 lh-copy f6' htmlFor='email-address'>\n                  Email\n                </label>\n                <input\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='email'\n                  name='email-address'\n                  id='email-address'\n                  onInput={this.onEmailChange}\n                />\n              </div>\n              <div className='mv3'>\n                <label className='db fw6 lh-copy f6' htmlFor='password'>\n                  Password\n                </label>\n                <input\n                  className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='password'\n                  name='password'\n                  id='password'\n                  pattern='.{16,}'\n                  required\n                  onInput={this.onPasswordChange}\n                  onKeyPress={e => keyEnter(e, this.onSubmit)}\n                />\n              </div>\n            </fieldset>\n            <div className=''>\n              <input\n                className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\n                type='submit'\n                onClick={this.onSubmit}\n                value='Register'\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: '',\n    };\n  }\n\n  onEmailChange = e => {\n    this.setState({ signInEmail: e.target.value });\n  };\n\n  onPasswordChange = e => {\n    this.setState({ signInPassword: e.target.value });\n  };\n\n  onSubmitSignIn = () => {\n    // POST Request\n    trackPromise(\n      fetch(\n        `${process.env.REACT_APP_FETCH_API || 'http://localhost:3000'}/signin`,\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          credentials: 'include',\n          body: JSON.stringify({\n            email: this.state.signInEmail,\n            password: this.state.signInPassword,\n          }),\n        }\n      )\n        .then(resp => resp.json())\n        .then(data => {\n          if (data?.id) {\n            this.props.loadUser(data);\n            this.props.routingLogic('/');\n          } else {\n            this.props.setError(data);\n          }\n        })\n    );\n  };\n\n  render() {\n    const { routingLogic, keyEnter } = this.props;\n    return (\n      <article className='br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw7 center'>\n        <main className='pa4 black-80'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <legend className='f1 fw6 ph0 mh0'>Sign In</legend>\n              <div className='mt3'>\n                <label className='db fw6 lh-copy f6' htmlFor='email-address'>\n                  Email\n                </label>\n                <input\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='email'\n                  name='email-address'\n                  id='email-address'\n                  onInput={this.onEmailChange}\n                  onKeyPress={e => keyEnter(e, this.onSubmitSignIn)}\n                />\n              </div>\n              <div className='mv3'>\n                <label className='db fw6 lh-copy f6' htmlFor='password'>\n                  Password\n                </label>\n                <input\n                  className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='password'\n                  name='password'\n                  id='password'\n                  onInput={this.onPasswordChange}\n                  onKeyPress={e => keyEnter(e, this.onSubmitSignIn)}\n                />\n              </div>\n            </fieldset>\n            <div className=''>\n              <input\n                className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\n                type='submit'\n                onClick={this.onSubmitSignIn}\n                value='Sign in'\n              />\n            </div>\n            <div className='lh-copy mt3'>\n              <p\n                onClick={() => routingLogic('/Register')}\n                className='f6 link dim black db pointer'\n              >\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default SignIn;\n","import React from 'react';\n\nconst Error = props => {\n  return (\n    <label className='br4 pa3 bg-red z-1 absolute dib center flex-column left-0 right-0 w-50 top-2'>\n      <h1 className='mv0'>ALERT!</h1>\n      <br />\n      {props.children}\n    </label>\n  );\n};\n\nexport default Error;\n","import React from 'react';\n\nconst GridRow = ({ title, value, editable, password, handleChange }) => (\n  <article\n    className='flex justify-around dt w-100 bb b--black-05 pa4 mt2'\n    href='#0'\n  >\n    <div className='dtc v-mid pl3'>\n      <h1 className='f4 f5-ns fw6 lh-title black mv0'>{title}</h1>\n      {editable ? (\n        <input\n          type={password ? 'password' : 'text'}\n          className='f4 fw4 mt0 mb0 black-60'\n          value={value}\n          onChange={e => handleChange(e.target.value)}\n        />\n      ) : (\n        <h2 className='f4 fw4 mt0 mb0 black-60'>{value}</h2>\n      )}\n    </div>\n  </article>\n);\n\nexport default GridRow;\n","import React, { useState } from 'react';\nimport GridRow from '../GridRow/GridRow';\nimport { trackPromise } from 'react-promise-tracker';\n\nconst ProfileEdit = ({\n  profile,\n  routingLogic,\n  joined,\n  keyEnter,\n  loadUser,\n  setError,\n}) => {\n  const [name, setName] = useState(profile.name);\n  const [email, setEmail] = useState(profile.email);\n\n  const { score } = profile;\n\n  const editProfileEnterPress = e => {\n    keyEnter(e, handleEditConfirmation);\n  };\n\n  const handleEditConfirmation = () => {\n    trackPromise(\n      fetch(\n        `${\n          process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\n        }/profile/${profile.id}`,\n        {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          credentials: 'include',\n          body: JSON.stringify({\n            name: name,\n            email: email,\n          }),\n        }\n      )\n        .then(res => res.json())\n        .then(data => {\n          if (data.id) {\n            loadUser(data);\n            routingLogic('/Profile');\n          } else {\n            setError(data);\n          }\n        })\n        .catch(err => console.log(err))\n    );\n  };\n\n  return (\n    <>\n      <div onKeyPress={e => editProfileEnterPress(e)} tabIndex='0'>\n        <main class='mw6 center profileContainer'>\n          <GridRow\n            title='Name: '\n            value={name}\n            editable\n            handleChange={setName}\n          />\n          <GridRow\n            title='Email: '\n            value={email}\n            editable\n            handleChange={setEmail}\n          />\n          <GridRow title='Score: ' value={score} />\n          <GridRow title='Joined: ' value={joined} />\n        </main>\n        <button\n          class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink'\n          onClick={() => {\n            handleEditConfirmation(true);\n            routingLogic('/Profile');\n          }}\n        >\n          Finished Editing\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileEdit;\n","import React, { useState } from 'react';\nimport GridRow from '../GridRow/GridRow';\nimport { trackPromise } from 'react-promise-tracker';\n\nconst ProfilePassword = ({ profile, routingLogic, setError, keyEnter }) => {\n  const [currPassword, setCurrPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n  const passwordUpdateEnterPress = e => {\n    keyEnter(e, handlePasswordUpdate);\n  };\n\n  const handlePasswordUpdate = () => {\n    trackPromise(\n      fetch(\n        `${\n          process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\n        }/profile/passwordUpdate/${profile.id}`,\n        {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          credentials: 'include',\n          body: JSON.stringify({\n            password: newPassword,\n            currentPassword: currPassword,\n          }),\n        }\n      )\n        .then(res => res.json())\n        .then(data => {\n          if (data === 'Password Updated') {\n            //TODO: success message\n            routingLogic('/Profile');\n          } else {\n            setError(data);\n          }\n        })\n        .catch(err => console.log(err))\n    );\n  };\n\n  return (\n    <>\n      <div onKeyPress={e => passwordUpdateEnterPress(e)} tabIndex='0'>\n        <main class='mw6 center profileContainer'>\n          <GridRow\n            title='Current Password: '\n            value={currPassword}\n            editable\n            password\n            handleChange={setCurrPassword}\n          />\n          <GridRow\n            title='New Password: '\n            value={newPassword}\n            editable\n            password\n            handleChange={setNewPassword}\n          />\n        </main>\n        <button\n          class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink w-25'\n          onClick={() => {\n            handlePasswordUpdate();\n          }}\n        >\n          Update Password\n        </button>\n        <button\n          class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink w-25'\n          onClick={() => {\n            routingLogic('/Profile');\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ProfilePassword;\n","import React from 'react';\nimport { trackPromise } from 'react-promise-tracker';\n\nconst ProfileDelete = ({ profile, routingLogic, clearUser, setError }) => {\n  const handleProfileDelete = () => {\n    trackPromise(\n      fetch(\n        `${\n          process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\n        }/profile/${profile.id}`,\n        {\n          method: 'DELETE',\n          headers: { 'Content-Type': 'application/json' },\n          credentials: 'include',\n        }\n      )\n        .then(res => res.json())\n        .then(data => {\n          if (data === 'User successfully deleted') {\n            //TODO: success message\n            clearUser();\n          } else {\n            setError(data);\n          }\n        })\n        .catch(err => console.log(err))\n    );\n  };\n\n  return (\n    <>\n      <main className='mw6 center profileContainer'>\n        <h1 className='pa4'>Are you sure you want to delete your profile?</h1>\n        <h4 className='pa2'>This is irreversible, be careful!</h4>\n      </main>\n      <button\n        className='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink w-25'\n        onClick={() => handleProfileDelete()}\n      >\n        Yes\n      </button>\n      <button\n        className='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink w-25'\n        onClick={() => routingLogic('/Profile')}\n      >\n        No\n      </button>\n    </>\n  );\n};\n\nexport default ProfileDelete;\n","import React from 'react';\nimport GridRow from '../GridRow/GridRow';\nimport ProfileEdit from './ProfileEdit';\nimport ProfilePassword from './ProfilePassword';\nimport ProfileDelete from './ProfileDelete';\n\nimport './Profile.css';\n\nconst dateOptions = {\n  year: 'numeric',\n  day: 'numeric',\n  month: 'long',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric',\n};\n\nconst Profile = ({\n  profile,\n  route,\n  routingLogic,\n  loadUser,\n  setError,\n  keyEnter,\n  clearUser,\n}) => {\n  const joinedDate = new Intl.DateTimeFormat('en-US', dateOptions).format(\n    new Date(profile.joined)\n  );\n\n  const { name, email, score } = profile;\n  const joined = joinedDate;\n\n  const profileView = (\n    <>\n      <main class='mw6 center profileContainer'>\n        <GridRow title='Name: ' value={name} />\n        <GridRow title='Email: ' value={email} />\n        <GridRow title='Score: ' value={score} />\n        <GridRow title='Joined: ' value={joined} />\n      </main>\n      <>\n        <button\n          class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink w5'\n          onClick={() => routingLogic('/Profile/Edit')}\n        >\n          Update Information\n        </button>\n        <button\n          class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink w5'\n          onClick={() => routingLogic('/Profile/PasswordChange')}\n        >\n          Update Password\n        </button>\n        <button\n          class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink w5'\n          onClick={() => routingLogic('/Profile/Delete')}\n        >\n          Delete Account\n        </button>\n      </>\n    </>\n  );\n\n  const editProps = {\n    profile,\n    routingLogic,\n    joined,\n    keyEnter,\n    loadUser,\n    setError,\n  };\n\n  const passUpdateProps = {\n    profile,\n    routingLogic,\n    keyEnter,\n    setError,\n  };\n\n  const deleteProps = {\n    profile,\n    routingLogic,\n    clearUser,\n    setError,\n  };\n\n  const profileRouting = () => {\n    switch (route) {\n      case '/Profile/Edit':\n        return <ProfileEdit {...editProps} />;\n      case '/Profile/PasswordChange':\n        return <ProfilePassword {...passUpdateProps} />;\n      case '/Profile/Delete':\n        return <ProfileDelete {...deleteProps} />;\n      default:\n        return profileView;\n    }\n  };\n\n  return <>{profileRouting()}</>;\n};\n\nexport default Profile;\n","import React from 'react';\nimport {usePromiseTracker} from 'react-promise-tracker';\n\nexport const LoadingSpinner = (props) => {\n  const {promiseInProgress} = usePromiseTracker();\n\n  return (\n    <div>\n      {promiseInProgress === true || props.route === '' ? (\n        <span className='centeringUnknown'>\n          <h1>LOADING</h1>\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport { createBrowserHistory } from 'history';\n\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Logo from './Components/Logo/Logo';\nimport Navigation from './Components/Navigation/Navigation';\nimport Rank from './Components/Rank/Rank';\nimport Register from './Components/Register/Register';\nimport SignIn from './Components/SignIn/SignIn';\nimport Error from './Components/Error/Error';\nimport Profile from './Components/Profile/Profile';\nimport { LoadingSpinner } from './Components/LoadingSpinner/LoadingSpinner';\nimport { trackPromise } from 'react-promise-tracker';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './App.css';\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        area: 800,\n      },\n    },\n  },\n  interactivity: {\n    events: {\n      onHover: {\n        enable: true,\n        mode: 'repulse',\n      },\n    },\n  },\n};\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: [],\n  route: '',\n  isSignedIn: false,\n  userProfile: {\n    id: '',\n    name: '',\n    email: '',\n    score: 0,\n    joined: '',\n  },\n  errorMsg: '',\n};\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    history.listen((location, action) => {\n      if (location.pathname !== this.state.route) {\n        trackPromise(\n          fetch(\n            `${\n              process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\n            }/profile`,\n            {\n              credentials: 'include',\n            }\n          )\n            .then(resp => resp.json())\n            .then(user => {\n              this.routingLogic(location.pathname, user, action);\n            })\n        );\n      }\n    });\n\n    trackPromise(\n      fetch(\n        `${process.env.REACT_APP_FETCH_API || 'http://localhost:3000'}/profile`,\n        {\n          credentials: 'include',\n        }\n      )\n        .then(resp => resp.json())\n        .then(user => {\n          this.routingLogic(history.location.pathname, user);\n        })\n    );\n  }\n\n  routingLogic = (urlPath, user, action = null) => {\n    console.log(this.state.userProfile, user?.id);\n    if (this.state.userProfile.id || user?.id) {\n      switch (urlPath) {\n        case '/SignIn':\n        case '/Register':\n          this.setState(\n            {\n              isSignedIn: true,\n              route: '/',\n              userProfile: user || this.state.userProfile,\n            },\n            () => {\n              if (action !== 'POP') {\n                history.push('/');\n              }\n            }\n          );\n          break;\n        case '/SignOut':\n          fetch(\n            `${\n              process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\n            }/signout`,\n            {\n              method: 'POST',\n              credentials: 'include',\n            }\n          )\n            .then(resp => resp.json())\n            .then(result => {\n              this.setState({ ...initialState, route: '/SignIn' });\n              // TODO: change this to a success box\n              this.setError(result);\n            })\n            .then(() => {\n              if (action !== 'POP') {\n                history.push(`/SignIn`);\n              }\n            });\n          break;\n        default:\n          this.setState(\n            {\n              isSignedIn: true,\n              route: urlPath,\n              userProfile: user || this.state.userProfile,\n            },\n            () => {\n              if (action !== 'POP') {\n                history.push(`${urlPath}`);\n              }\n            }\n          );\n      }\n    } else {\n      switch (urlPath) {\n        case '/SignIn':\n        case '/Register':\n          this.setState({ ...this.state, route: urlPath }, () => {\n            if (action !== 'POP') {\n              history.push(`${urlPath}`);\n            }\n          });\n          break;\n        default:\n          this.setState(\n            {\n              isSignedIn: false,\n              route: '/SignIn',\n            },\n            () => {\n              if (action !== 'POP') {\n                history.push(`/SignIn`);\n              }\n            }\n          );\n      }\n    }\n  };\n\n  loadUser = user => {\n    this.setState({\n      userProfile: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        score: user.score,\n        joined: user.joined,\n      },\n      isSignedIn: true,\n    });\n  };\n\n  clearUser = () => {\n    this.setState(\n      {\n        ...initialState,\n      },\n      () => {\n        this.routingLogic('/SignIn');\n      }\n    );\n  };\n\n  onInputChange = event => {\n    this.setState({\n      input: event.target.value,\n    });\n  };\n\n  calculateBox = data => {\n    const clarifyArray = data.outputs[0].data.regions.map(\n      region => region.region_info.bounding_box\n    );\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    let boundingBoxes = clarifyArray.map(box => {\n      return {\n        topRow: box.top_row * height,\n        leftCol: box.left_col * width,\n        bottomRow: height - box.bottom_row * height,\n        rightCol: width - box.right_col * width,\n      };\n    });\n    return boundingBoxes;\n  };\n\n  displayBox = boxes => {\n    this.setState({\n      box: [...this.state.box, ...boxes],\n    });\n  };\n\n  onButtonSubmit = () => {\n    this.setState(\n      {\n        imageUrl: this.state.input,\n        box: [],\n      },\n      () => {\n        trackPromise(\n          fetch(\n            `${\n              process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\n            }/imageURL`,\n            {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              credentials: 'include',\n              body: JSON.stringify({\n                input: this.state.input,\n              }),\n            }\n          )\n            .then(response => response.json())\n            .then(response => {\n              if (response.outputs) {\n                fetch(\n                  `${\n                    process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\n                  }/image`,\n                  {\n                    method: 'PUT',\n                    headers: { 'Content-Type': 'application/json' },\n                    credentials: 'include',\n                    body: JSON.stringify({\n                      id: this.state.userProfile.id,\n                    }),\n                  }\n                )\n                  .then(resp => resp.json())\n                  .then(newProfile => {\n                    this.setState({\n                      userProfile: newProfile,\n                    });\n                  });\n                //TODO: calculate the box first and then fetch from image\n                this.displayBox(this.calculateBox(response));\n              } else {\n                this.setError(response);\n              }\n            })\n            .catch(err => console.log(err))\n        );\n      }\n    );\n  };\n\n  setError = msg => {\n    this.setState(\n      {\n        errorMsg: msg,\n      },\n      () => {\n        setTimeout(() => this.setState({ errorMsg: '' }), 2000);\n      }\n    );\n  };\n\n  onKeyEnter = (e, submit) => {\n    if (e.key === 'Enter') {\n      submit();\n    }\n  };\n\n  switchRoute = route => {\n    const { imageUrl, box, userProfile, input } = this.state;\n\n    switch (route) {\n      case '/Profile':\n      case '/Profile/Edit':\n      case '/Profile/PasswordChange':\n      case '/Profile/Delete':\n        return (\n          <Profile\n            profile={this.state.userProfile}\n            route={this.state.route}\n            routingLogic={this.routingLogic}\n            loadUser={this.loadUser}\n            setError={this.setError}\n            keyEnter={this.onKeyEnter}\n            clearUser={this.clearUser}\n          />\n        );\n      case '/SignIn':\n        return (\n          <SignIn\n            routingLogic={this.routingLogic}\n            loadUser={this.loadUser}\n            setError={this.setError}\n            keyEnter={this.onKeyEnter}\n          />\n        );\n      case '/Register':\n        return (\n          <Register\n            routingLogic={this.routingLogic}\n            loadUser={this.loadUser}\n            setError={this.setError}\n            keyEnter={this.onKeyEnter}\n          />\n        );\n      default:\n        return (\n          <>\n            <Logo />\n            <Rank name={userProfile.name} score={userProfile.score} />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n              inputField={input}\n            />\n            <FaceRecognition imageUrl={imageUrl} boundingBox={box} />\n          </>\n        );\n    }\n  };\n\n  render() {\n    const { isSignedIn, route, errorMsg } = this.state;\n\n    return route === '' ? (\n      <LoadingSpinner route={route} />\n    ) : (\n      <div className='App'>\n        <LoadingSpinner />\n        <Particles className='particles' params={particleOptions} />\n        <CSSTransition\n          in={errorMsg !== ''}\n          timeout={300}\n          classNames='error'\n          unmountOnExit\n        >\n          <Error>{errorMsg}</Error>\n        </CSSTransition>\n\n        <Navigation routingLogic={this.routingLogic} isSignedIn={isSignedIn} />\n\n        {this.switchRoute(route)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}