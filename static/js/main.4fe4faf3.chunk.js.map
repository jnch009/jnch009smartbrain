{"version":3,"sources":["Components/FaceRecognition/FaceRecognition.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Logo/Logo.js","Components/Navigation/Navigation.js","Components/Rank/Rank.js","Components/Register/Register.js","Components/SignIn/SignIn.js","Components/Error/Error.js","Components/GridRow/GridRow.js","Components/Profile/Profile.js","Components/LoadingSpinner/LoadingSpinner.js","App.js","serviceWorker.js","index.js"],"names":["FaceRecognition","imageUrl","boundingBox","className","id","src","alt","width","height","map","box","key","topRow","style","top","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onButtonSubmit","inputField","type","value","onInput","e","onClick","Logo","options","max","paddingTop","Navigation","onRouteChange","isSignedIn","display","justifyContent","Rank","name","score","Register","props","onNameChange","setState","target","onEmailChange","email","onPasswordChange","password","validateEmail","test","state","validatePassword","validateForm","setError","onSubmit","trackPromise","fetch","process","method","headers","body","JSON","stringify","credentials","then","resp","json","data","loadUser","keyEnter","this","htmlFor","pattern","required","onKeyPress","Component","SignIn","signInEmail","signInPassword","onSubmitSignIn","Error","children","GridRow","title","editable","handleChange","class","href","onChange","dateOptions","year","day","month","hour","minute","second","Profile","profile","joinedDate","Intl","DateTimeFormat","format","Date","joined","useState","setName","setEmail","editProfile","setEditProfile","handleEditConfirmation","res","catch","err","console","log","editProfileEnterPress","tabIndex","LoadingSpinner","promiseInProgress","usePromiseTracker","route","particleOptions","particles","number","density","enable","area","interactivity","events","onHover","mode","initialState","input","userProfile","errorMsg","App","user","event","calculateBox","clarifyArray","outputs","regions","region","region_info","bounding_box","image","document","getElementById","Number","top_row","left_col","bottom_row","right_col","displayBox","boxes","response","newProfile","result","msg","setTimeout","onKeyEnter","submit","params","CSSTransition","in","timeout","classNames","unmountOnExit","switchRoute","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4fe4faf3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, boundingBox}) => {\r\n  return (\r\n    <div className='flexCenter'>\r\n      <div className='absolute mt2 mb4'>\r\n        <img\r\n          id='inputimage'\r\n          className='flexCenter'\r\n          src={imageUrl}\r\n          alt=''\r\n          width='500px'\r\n          height='auto'\r\n        />\r\n        {boundingBox.map(box => (\r\n          <div\r\n            key={box.topRow}\r\n            className='boundingBox'\r\n            style={{\r\n              top: box.topRow,\r\n              right: box.rightCol,\r\n              bottom: box.bottomRow,\r\n              left: box.leftCol,\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\n\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit, inputField }) => {\r\n  return (\r\n    <div>\r\n      <p className='f3'>\r\n        {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='form center pa4 br3 shadow-5'>\r\n          <input\r\n            className='f4 pa2 w-70 center'\r\n            type='text'\r\n            value={inputField}\r\n            onInput={e => onInputChange(e)}\r\n          />\r\n          <button\r\n            className='tc w-30 o-90 glow f6 link ph3 pv2 dib white bg-light-purple'\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\n\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0'>\r\n      <Tilt\r\n        className='Tilt br2 shadow-2'\r\n        options={{ max: 55 }}\r\n        style={{ height: 100, width: 100 }}\r\n      >\r\n        <div className='Tilt-inner pa3'>\r\n          {' '}\r\n          <img style={{ paddingTop: '5px' }} src='./learning.png' alt='' />{' '}\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  return (\r\n    <>\r\n      {isSignedIn === true ? (\r\n        <>\r\n          <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            {' '}\r\n            <p\r\n              className='f3 link dim black underline pa3 pointer'\r\n              onClick={() => onRouteChange('home')}\r\n            >\r\n              Home\r\n            </p>\r\n            <p\r\n              className='f3 link dim black underline pa3 pointer'\r\n              onClick={() => onRouteChange('Profile')}\r\n            >\r\n              Profile\r\n            </p>\r\n            <p\r\n              className='f3 link dim black underline pa3 pointer'\r\n              onClick={() => onRouteChange('SignIn')}\r\n            >\r\n              Sign Out\r\n            </p>\r\n          </nav>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            {' '}\r\n            <p\r\n              className='f3 link dim black underline pa3 pointer'\r\n              onClick={() => onRouteChange('SignIn')}\r\n            >\r\n              Sign In\r\n            </p>{' '}\r\n            <p\r\n              className='f3 link dim black underline pa3 pointer'\r\n              onClick={() => onRouteChange('Register')}\r\n            >\r\n              Register\r\n            </p>\r\n          </nav>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst Rank = ({ name, score }) => {\r\n  return (\r\n    <div>\r\n      <div className='white f3'>{`${name}, your current rank is....`}</div>\r\n      <div className='white f1'>{`${score}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React, { Component } from 'react';\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  onNameChange = e => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n\r\n  onEmailChange = e => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  onPasswordChange = e => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  validateEmail = () => {\r\n    let reEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\r\n    return reEmail.test(this.state.email);\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let rePassword = /.{8,}/;\r\n    return rePassword.test(this.state.password);\r\n  };\r\n\r\n  validateForm = () => {\r\n    if (!this.validateEmail() || !this.validatePassword()) {\r\n      if (!this.validateEmail()) {\r\n        this.props.setError('Email format is not correct');\r\n      } else if (!this.validatePassword()) {\r\n        this.props.setError('Password must be at least 8 characters');\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    if (this.validateForm()) {\r\n      trackPromise(\r\n        fetch(\r\n          `${\r\n            process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\r\n          }/register`,\r\n          {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              name: this.state.name,\r\n              email: this.state.email,\r\n              password: this.state.password,\r\n            }),\r\n            credentials: 'include',\r\n          },\r\n        )\r\n          .then(resp => resp.json())\r\n          .then(data => {\r\n            if (data?.id) {\r\n              this.props.loadUser(data);\r\n              this.props.onRouteChange('home');\r\n            } else {\r\n              this.props.setError(data);\r\n            }\r\n          }),\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { keyEnter } = this.props;\r\n\r\n    return (\r\n      <article className='br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw7 center'>\r\n        <main className='pa4 black-80'>\r\n          <div className='measure'>\r\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\r\n              <legend className='f1 fw6 ph0 mh0'>Register</legend>\r\n              <div className='mt3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='name'>\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='text'\r\n                  name='name'\r\n                  id='name'\r\n                  onInput={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className='mt3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='email-address'>\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='email'\r\n                  name='email-address'\r\n                  id='email-address'\r\n                  onInput={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className='mv3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='password'>\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  pattern='.{16,}'\r\n                  required\r\n                  onInput={this.onPasswordChange}\r\n                  onKeyPress={e => keyEnter(e, this.onSubmit)}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=''>\r\n              <input\r\n                className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\r\n                type='submit'\r\n                onClick={this.onSubmit}\r\n                value='Register'\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: '',\r\n    };\r\n  }\r\n\r\n  onEmailChange = e => {\r\n    this.setState({ signInEmail: e.target.value });\r\n  };\r\n\r\n  onPasswordChange = e => {\r\n    this.setState({ signInPassword: e.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    // POST Request\r\n    trackPromise(\r\n      fetch(\r\n        `${process.env.REACT_APP_FETCH_API || 'http://localhost:3000'}/signin`,\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          credentials: 'include',\r\n          body: JSON.stringify({\r\n            email: this.state.signInEmail,\r\n            password: this.state.signInPassword,\r\n          }),\r\n        },\r\n      )\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n          if (data?.id) {\r\n            this.props.loadUser(data);\r\n            this.props.onRouteChange('home');\r\n          } else {\r\n            this.props.setError(data);\r\n          }\r\n        }),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange, keyEnter } = this.props;\r\n    return (\r\n      <article className='br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw7 center'>\r\n        <main className='pa4 black-80'>\r\n          <div className='measure'>\r\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\r\n              <legend className='f1 fw6 ph0 mh0'>Sign In</legend>\r\n              <div className='mt3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='email-address'>\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='email'\r\n                  name='email-address'\r\n                  id='email-address'\r\n                  onInput={this.onEmailChange}\r\n                  onKeyPress={e => keyEnter(e, this.onSubmitSignIn)}\r\n                />\r\n              </div>\r\n              <div className='mv3'>\r\n                <label className='db fw6 lh-copy f6' htmlFor='password'>\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  onInput={this.onPasswordChange}\r\n                  onKeyPress={e => keyEnter(e, this.onSubmitSignIn)}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=''>\r\n              <input\r\n                className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\r\n                type='submit'\r\n                onClick={this.onSubmitSignIn}\r\n                value='Sign in'\r\n              />\r\n            </div>\r\n            <div className='lh-copy mt3'>\r\n              <p\r\n                onClick={() => onRouteChange('Register')}\r\n                className='f6 link dim black db pointer'\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\n\r\nconst Error = props => {\r\n  return (\r\n    <label className='br4 pa3 bg-red z-1 absolute dib center flex-column left-0 right-0 w-50 top-2'>\r\n      <h1 className='mv0'>ALERT!</h1>\r\n      <br />\r\n      {props.children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\n\r\nconst GridRow = ({ title, value, editable, handleChange }) => (\r\n  <article\r\n    class='flex justify-around dt w-100 bb b--black-05 pa4 mt2'\r\n    href='#0'\r\n  >\r\n    <div class='dtc v-mid pl3'>\r\n      <h1 class='f4 f5-ns fw6 lh-title black mv0'>{title}</h1>\r\n      {editable ? (\r\n        <input type='text' class='f4 fw4 mt0 mb0 black-60' value={value} onChange={e => handleChange(e.target.value)}/>\r\n      ) : (\r\n        <h2 class='f4 fw4 mt0 mb0 black-60'>{value}</h2>\r\n      )}\r\n    </div>\r\n  </article>\r\n);\r\n\r\nexport default GridRow;","import React, { useState } from 'react';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport GridRow from '../GridRow/GridRow';\r\nimport './Profile.css';\r\n\r\nconst dateOptions = {\r\n  year: 'numeric',\r\n  day: 'numeric',\r\n  month: 'long',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric',\r\n};\r\n\r\nconst Profile = ({ profile, loadUser, setError, keyEnter }) => {\r\n  const joinedDate = new Intl.DateTimeFormat('en-US', dateOptions).format(\r\n    new Date(profile.joined)\r\n  );\r\n\r\n  const [name, setName] = useState(profile.name);\r\n  const [email, setEmail] = useState(profile.email);\r\n  const score = profile.score;\r\n  const joined = joinedDate;\r\n  const [editProfile, setEditProfile] = useState(false);\r\n\r\n  const editProfileEnterPress = e => {\r\n    if (editProfile) {\r\n      keyEnter(e, handleEditConfirmation);\r\n    }\r\n  };\r\n\r\n  const handleEditConfirmation = () => {\r\n    trackPromise(\r\n      fetch(\r\n        `${\r\n          process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\r\n        }/profile/${profile.id}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          credentials: 'include',\r\n          body: JSON.stringify({\r\n            name: name,\r\n            email: email,\r\n          }),\r\n        }\r\n      )\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.id) {\r\n            loadUser(data);\r\n            setEditProfile(false);\r\n          } else {\r\n            setError(data);\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onKeyPress={e => editProfileEnterPress(e)} tabIndex='0'>\r\n        <main class='mw6 center profileContainer'>\r\n          <GridRow\r\n            title='Name: '\r\n            value={name}\r\n            editable={editProfile}\r\n            handleChange={setName}\r\n          />\r\n          <GridRow\r\n            title='Email: '\r\n            value={email}\r\n            editable={editProfile}\r\n            handleChange={setEmail}\r\n          />\r\n          <GridRow title='Score: ' value={score} />\r\n          <GridRow title='Joined: ' value={joined} />\r\n        </main>\r\n        {editProfile ? (\r\n          <a\r\n            class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink'\r\n            href='#0'\r\n            onClick={() => handleEditConfirmation(true)}\r\n          >\r\n            Finished Editing\r\n          </a>\r\n        ) : (\r\n          <>\r\n            <a\r\n              class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink'\r\n              href='#0'\r\n              onClick={() => setEditProfile(true)}\r\n            >\r\n              Update Information\r\n            </a>\r\n            <a\r\n              class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink'\r\n              href='#0'\r\n            >\r\n              Update Password\r\n            </a>\r\n            <a\r\n              class='f6 link dim br-pill ph3 pv2 ma3 dib white bg-hot-pink'\r\n              href='#0'\r\n            >\r\n              Delete Account\r\n            </a>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport {usePromiseTracker} from 'react-promise-tracker';\r\n\r\nexport const LoadingSpinner = (props) => {\r\n  const {promiseInProgress} = usePromiseTracker();\r\n\r\n  return (\r\n    <div>\r\n      {promiseInProgress === true || props.route === '' ? (\r\n        <span className='centeringUnknown'>\r\n          <h1>LOADING</h1>\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\n\r\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\r\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\r\nimport Logo from './Components/Logo/Logo';\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport Rank from './Components/Rank/Rank';\r\nimport Register from './Components/Register/Register';\r\nimport SignIn from './Components/SignIn/SignIn';\r\nimport Error from './Components/Error/Error';\r\nimport Profile from './Components/Profile/Profile';\r\nimport { LoadingSpinner } from './Components/LoadingSpinner/LoadingSpinner';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './App.css';\r\n\r\nconst particleOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 100,\r\n      density: {\r\n        enable: true,\r\n        area: 800,\r\n      },\r\n    },\r\n  },\r\n  interactivity: {\r\n    events: {\r\n      onHover: {\r\n        enable: true,\r\n        mode: 'repulse',\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: [],\r\n  route: '',\r\n  isSignedIn: false,\r\n  userProfile: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    score: 0,\r\n    joined: '',\r\n  },\r\n  errorMsg: '',\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    trackPromise(\r\n      fetch(\r\n        `${process.env.REACT_APP_FETCH_API || 'http://localhost:3000'}/profile`,\r\n        {\r\n          credentials: 'include',\r\n        }\r\n      )\r\n        .then(resp => resp.json())\r\n        .then(user => {\r\n          if (user.id) {\r\n            this.setState({\r\n              isSignedIn: true,\r\n              route: 'home',\r\n              userProfile: user,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              route: 'SignIn',\r\n            });\r\n          }\r\n        })\r\n    );\r\n  }\r\n\r\n  loadUser = user => {\r\n    this.setState({\r\n      userProfile: {\r\n        id: user.id,\r\n        name: user.name,\r\n        email: user.email,\r\n        score: user.score,\r\n        joined: user.joined,\r\n      },\r\n    });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      input: event.target.value,\r\n    });\r\n  };\r\n\r\n  calculateBox = data => {\r\n    const clarifyArray = data.outputs[0].data.regions.map(\r\n      region => region.region_info.bounding_box\r\n    );\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n\r\n    let boundingBoxes = clarifyArray.map(box => {\r\n      return {\r\n        topRow: box.top_row * height,\r\n        leftCol: box.left_col * width,\r\n        bottomRow: height - box.bottom_row * height,\r\n        rightCol: width - box.right_col * width,\r\n      };\r\n    });\r\n    return boundingBoxes;\r\n  };\r\n\r\n  displayBox = boxes => {\r\n    this.setState({\r\n      box: [...this.state.box, ...boxes],\r\n    });\r\n  };\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState(\r\n      {\r\n        imageUrl: this.state.input,\r\n        box: [],\r\n      },\r\n      () => {\r\n        trackPromise(\r\n          fetch(\r\n            `${\r\n              process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\r\n            }/imageURL`,\r\n            {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              credentials: 'include',\r\n              body: JSON.stringify({\r\n                input: this.state.input,\r\n              }),\r\n            }\r\n          )\r\n            .then(response => response.json())\r\n            .then(response => {\r\n              if (response.outputs) {\r\n                fetch(\r\n                  `${\r\n                    process.env.REACT_APP_FETCH_API || 'http://localhost:3000'\r\n                  }/image`,\r\n                  {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    credentials: 'include',\r\n                    body: JSON.stringify({\r\n                      id: this.state.userProfile.id,\r\n                    }),\r\n                  }\r\n                )\r\n                  .then(resp => resp.json())\r\n                  .then(newProfile => {\r\n                    this.setState({\r\n                      userProfile: newProfile,\r\n                    });\r\n                  });\r\n                //TODO: calculate the box first and then fetch from image\r\n                this.displayBox(this.calculateBox(response));\r\n              } else {\r\n                this.setError(response);\r\n              }\r\n            })\r\n            .catch(err => console.log(err))\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  onRouteChange = route => {\r\n    this.setState({\r\n      imageUrl: '',\r\n      input: '',\r\n      box: [],\r\n    });\r\n    if (this.state.isSignedIn && (route === 'SignIn' || route === 'Register')) {\r\n      fetch(\r\n        `${process.env.REACT_APP_FETCH_API || 'http://localhost:3000'}/signout`,\r\n        {\r\n          method: 'POST',\r\n          credentials: 'include',\r\n        }\r\n      )\r\n        .then(resp => resp.json())\r\n        .then(result => {\r\n          this.setError(result);\r\n          this.setState({ isSignedIn: false, route: route });\r\n        });\r\n    } else if (route === 'home') {\r\n      this.setState({\r\n        isSignedIn: true,\r\n        route: route,\r\n      });\r\n    } else {\r\n      this.setState({ ...this.state, route: route });\r\n    }\r\n  };\r\n\r\n  setError = msg => {\r\n    this.setState(\r\n      {\r\n        errorMsg: msg,\r\n      },\r\n      () => {\r\n        setTimeout(() => this.setState({ errorMsg: '' }), 2000);\r\n      }\r\n    );\r\n  };\r\n\r\n  onKeyEnter = (e, submit) => {\r\n    if (e.key === 'Enter') {\r\n      submit();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isSignedIn,\r\n      imageUrl,\r\n      route,\r\n      box,\r\n      userProfile,\r\n      errorMsg,\r\n      input,\r\n    } = this.state;\r\n\r\n    const switchRoute = () => {\r\n      switch (route) {\r\n        case 'Profile':\r\n          return (\r\n            <Profile\r\n              profile={userProfile}\r\n              loadUser={this.loadUser}\r\n              setError={this.setError}\r\n              keyEnter={this.onKeyEnter}\r\n            />\r\n          );\r\n        case 'SignIn':\r\n          return (\r\n            <SignIn\r\n              onRouteChange={this.onRouteChange}\r\n              loadUser={this.loadUser}\r\n              setError={this.setError}\r\n              keyEnter={this.onKeyEnter}\r\n            />\r\n          );\r\n        case 'Register':\r\n          return (\r\n            <Register\r\n              onRouteChange={this.onRouteChange}\r\n              loadUser={this.loadUser}\r\n              setError={this.setError}\r\n              keyEnter={this.onKeyEnter}\r\n            />\r\n          );\r\n        default:\r\n          return (\r\n            <>\r\n              <Logo />\r\n              <Rank name={userProfile.name} score={userProfile.score} />\r\n              <ImageLinkForm\r\n                onInputChange={this.onInputChange}\r\n                onButtonSubmit={this.onButtonSubmit}\r\n                inputField={input}\r\n              />\r\n              <FaceRecognition imageUrl={imageUrl} boundingBox={box} />\r\n            </>\r\n          );\r\n      }\r\n    };\r\n\r\n    return route === '' ? (\r\n      <LoadingSpinner route={route} />\r\n    ) : (\r\n      <div className='App'>\r\n        <LoadingSpinner />\r\n        <Particles className='particles' params={particleOptions} />\r\n        <CSSTransition\r\n          in={errorMsg !== ''}\r\n          timeout={300}\r\n          classNames='error'\r\n          unmountOnExit\r\n        >\r\n          <Error>{errorMsg}</Error>\r\n        </CSSTransition>\r\n\r\n        <Navigation\r\n          onRouteChange={this.onRouteChange}\r\n          isSignedIn={isSignedIn}\r\n        />\r\n\r\n        {switchRoute()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}